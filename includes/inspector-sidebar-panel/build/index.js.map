{"version":3,"file":"index.js","mappings":"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","sources":["webpack://prc-datasets-inspector-sidebar-panel/webpack/bootstrap","webpack://prc-datasets-inspector-sidebar-panel/webpack/runtime/compat get default export","webpack://prc-datasets-inspector-sidebar-panel/webpack/runtime/define property getters","webpack://prc-datasets-inspector-sidebar-panel/webpack/runtime/hasOwnProperty shorthand","webpack://prc-datasets-inspector-sidebar-panel/external window [\"wp\",\"primitives\"]","webpack://prc-datasets-inspector-sidebar-panel/external window \"ReactJSXRuntime\"","webpack://prc-datasets-inspector-sidebar-panel/./node_modules/@wordpress/icons/build-module/library/download.js","webpack://prc-datasets-inspector-sidebar-panel/external window [\"wp\",\"element\"]","webpack://prc-datasets-inspector-sidebar-panel/./node_modules/@wordpress/icons/build-module/icon/index.js","webpack://prc-datasets-inspector-sidebar-panel/external window \"prcComponents\"","webpack://prc-datasets-inspector-sidebar-panel/external window [\"wp\",\"i18n\"]","webpack://prc-datasets-inspector-sidebar-panel/external window \"React\"","webpack://prc-datasets-inspector-sidebar-panel/external window [\"wp\",\"plugins\"]","webpack://prc-datasets-inspector-sidebar-panel/external window [\"wp\",\"editor\"]","webpack://prc-datasets-inspector-sidebar-panel/external window [\"wp\",\"data\"]","webpack://prc-datasets-inspector-sidebar-panel/external window [\"wp\",\"coreData\"]","webpack://prc-datasets-inspector-sidebar-panel/external window [\"wp\",\"components\"]","webpack://prc-datasets-inspector-sidebar-panel/external window [\"wp\",\"apiFetch\"]","webpack://prc-datasets-inspector-sidebar-panel/./src/stats-panel.js","webpack://prc-datasets-inspector-sidebar-panel/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst download = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M18 11.3l-1-1.1-4 4V3h-1.5v11.3L7 10.2l-1 1.1 6.2 5.8 5.8-5.8zm.5 3.7v3.5h-13V15H4v5h16v-5h-1.5z\"\n  })\n});\nexport default download;\n//# sourceMappingURL=download.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","/**\n * WordPress dependencies\n */\nimport { cloneElement, forwardRef } from '@wordpress/element';\n\n/** @typedef {{icon: JSX.Element, size?: number} & import('@wordpress/primitives').SVGProps} IconProps */\n\n/**\n * Return an SVG icon.\n *\n * @param {IconProps}                                 props icon is the SVG component to render\n *                                                          size is a number specifying the icon size in pixels\n *                                                          Other props will be passed to wrapped SVG component\n * @param {import('react').ForwardedRef<HTMLElement>} ref   The forwarded ref to the SVG element.\n *\n * @return {JSX.Element}  Icon component\n */\nfunction Icon({\n  icon,\n  size = 24,\n  ...props\n}, ref) {\n  return cloneElement(icon, {\n    width: size,\n    height: size,\n    ...props,\n    ref\n  });\n}\nexport default forwardRef(Icon);\n//# sourceMappingURL=index.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcComponents\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","import { useMemo, useState, useEffect } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport { PanelBody, BaseControl, SelectControl } from '@wordpress/components';\n\nimport './stats-panel.scss';\n\n// Custom hook for fetching dataset stats\nfunction useDatasetStats(postId) {\n\tconst [stats, setStats] = useState(null);\n\n\tuseEffect(() => {\n\t\tapiFetch({\n\t\t\tpath: `/prc-api/v3/datasets/download-stats?dataset_id=${postId}`,\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tsetStats({\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\t...response,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error({ error });\n\t\t\t});\n\t}, [postId]);\n\n\treturn stats;\n}\n\nfunction CalendarChart({\n\tvalues = [30, 60, 90, 60, 100, 50, 45, 20, 70, 80, 90, 40],\n}) {\n\tconst months = [\n\t\t'Jan',\n\t\t'Feb',\n\t\t'Mar',\n\t\t'Apr',\n\t\t'May',\n\t\t'Jun',\n\t\t'Jul',\n\t\t'Aug',\n\t\t'Sep',\n\t\t'Oct',\n\t\t'Nov',\n\t\t'Dec',\n\t];\n\n\tconst getHeatLevel = (value) => {\n\t\tconst max = Math.max(...values);\n\t\tconst percentage = (value / max) * 100;\n\t\tif (value === 0) return 'none';\n\t\tif (percentage <= 25) return 'low';\n\t\tif (percentage <= 50) return 'medium';\n\t\tif (percentage <= 75) return 'high';\n\t\treturn 'very-high';\n\t};\n\n\treturn (\n\t\t<div className=\"calendar-chart\">\n\t\t\t{values.map((value, index) => (\n\t\t\t\t<div\n\t\t\t\t\tkey={index}\n\t\t\t\t\tclassName=\"calendar-chart-item\"\n\t\t\t\t\tdata-month={months[index]}\n\t\t\t\t\tdata-heat={getHeatLevel(value)}\n\t\t\t\t>\n\t\t\t\t\t<span className=\"value\">{value}</span>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default function StatsPanel({ postId }) {\n\tconst datasetStats = useDatasetStats(postId);\n\n\tconst currentYear = new Date().getFullYear();\n\n\tconst years = useMemo(() => {\n\t\tif (!datasetStats?.log) return [];\n\t\treturn Object.keys(datasetStats.log);\n\t}, [datasetStats]);\n\n\tconst [selectedYear, setSelectedYear] = useState(currentYear);\n\n\tconst data = useMemo(() => {\n\t\tif (!datasetStats?.log) return [];\n\t\tconst dataForYear = datasetStats?.log[selectedYear] || {};\n\t\t// 1. Ensure that dataForYear has properties 01 through 12, if there are any missing months add them with a value of 0\n\t\tfor (let i = 1; i <= 12; i++) {\n\t\t\t// Zero-pad the month number to ensure it matches the '01', '02' format\n\t\t\tconst monthKey = i.toString().padStart(2, '0');\n\t\t\tif (!(monthKey in dataForYear)) {\n\t\t\t\tdataForYear[monthKey] = 0;\n\t\t\t}\n\t\t}\n\t\t// 2. Sort the data by the keys, 01 should be first, 12 should be last, etc...\n\t\tconst sortedData = Object.keys(dataForYear).sort((a, b) => a - b);\n\t\t// 3. Return the sorted data and values without the keys...\n\t\treturn sortedData.map((key) => dataForYear[key]);\n\t}, [datasetStats, selectedYear]);\n\n\tconst total = useMemo(() => {\n\t\treturn data.reduce((acc, curr) => acc + curr, 0);\n\t}, [data]);\n\n\treturn (\n\t\t<PanelBody title=\"Dataset Download Stats\">\n\t\t\t<SelectControl\n\t\t\t\tlabel=\"Select Year\"\n\t\t\t\tvalue={selectedYear}\n\t\t\t\toptions={years.map((year) => ({\n\t\t\t\t\tlabel: year,\n\t\t\t\t\tvalue: year,\n\t\t\t\t}))}\n\t\t\t\tonChange={setSelectedYear}\n\t\t\t/>\n\t\t\t<BaseControl id=\"dataset-download-stats\" help={`Total: ${total}`}>\n\t\t\t\t<CalendarChart values={data} />\n\t\t\t</BaseControl>\n\t\t</PanelBody>\n\t);\n}\n","/**\n * External Dependencies\n */\nimport { Icon, download as icon } from '@wordpress/icons';\nimport { MediaDropZone } from '@prc/components';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment, useMemo, useState, useEffect } from 'react';\nimport { registerPlugin } from '@wordpress/plugins';\nimport {\n\tPluginSidebar,\n\tPluginSidebarMoreMenuItem,\n\tPluginPrePublishPanel,\n\tstore as editorStore,\n} from '@wordpress/editor';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport {\n\tButton,\n\tCardDivider,\n\tPanelBody,\n\tTextareaControl,\n\tToggleControl,\n} from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport StatsPanel from './stats-panel';\n\nconst PLUGIN_NAME = 'prc-platform-datasets-panel';\nconst ALLOWED_TYPES = ['application/zip', 'application/pdf'];\n\nfunction DatasetOptionsPanel() {\n\tconst { postType, postId } = useSelect((select) => {\n\t\tconst currentPostType = select(editorStore).getCurrentPostType();\n\t\tconst currentPostId = select(editorStore).getCurrentPostId();\n\t\treturn {\n\t\t\tpostType: currentPostType,\n\t\t\tpostId: currentPostId,\n\t\t};\n\t}, []);\n\n\tconst [meta, setMeta] = useEntityProp('postType', postType, 'meta', postId);\n\n\tconst { attachmentId, isAtp, datasetSchema } = useMemo(() => {\n\t\treturn {\n\t\t\tattachmentId: meta._download_attachment_id || false,\n\t\t\tisAtp: meta.is_atp || false,\n\t\t\tdatasetSchema: meta.dataset_schema || '',\n\t\t};\n\t}, [meta]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<PluginSidebarMoreMenuItem target={PLUGIN_NAME} icon={icon}>\n\t\t\t\t{__('Dataset Options')}\n\t\t\t</PluginSidebarMoreMenuItem>\n\t\t\t<PluginSidebar\n\t\t\t\tname={PLUGIN_NAME}\n\t\t\t\ttitle=\"Dataset Options\"\n\t\t\t\ticon={<Icon icon={icon} size={16} />}\n\t\t\t>\n\t\t\t\t<PanelBody title=\"Dataset File\">\n\t\t\t\t\t<MediaDropZone\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tattachmentId,\n\t\t\t\t\t\t\tdisabled: false,\n\t\t\t\t\t\t\tonUpdate: (attachment) => {\n\t\t\t\t\t\t\t\tsetMeta({\n\t\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\t\t_download_attachment_id: attachment.id,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\teditButtonLabel: __('Edit Dataset File'),\n\t\t\t\t\t\t\tonClear: false,\n\t\t\t\t\t\t\tallowedTypes: ALLOWED_TYPES,\n\t\t\t\t\t\t\tlabel: __('Upload Dataset File (zip or pdf)'),\n\t\t\t\t\t\t\tsingularLabel: __('dataset'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<CardDivider />\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"ATP Dataset\"\n\t\t\t\t\t\thelp=\"ATP datasets are bound by an opt-in to the ATP Terms of Service.\"\n\t\t\t\t\t\tchecked={isAtp}\n\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\tsetMeta({\n\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\tis_atp: value,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t<StatsPanel postId={postId} />\n\t\t\t</PluginSidebar>\n\t\t\t<PluginPrePublishPanel>\n\t\t\t\t<PanelBody title=\"Review Dataset Options\">\n\t\t\t\t\t<MediaDropZone\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tattachmentId,\n\t\t\t\t\t\t\tdisabled: false,\n\t\t\t\t\t\t\tonUpdate: (attachment) => {\n\t\t\t\t\t\t\t\tsetMeta({\n\t\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\t\t_download_attachment_id: attachment.id,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\teditButtonLabel: __('Edit Dataset File'),\n\t\t\t\t\t\t\tonClear: false,\n\t\t\t\t\t\t\tallowedTypes: ALLOWED_TYPES,\n\t\t\t\t\t\t\tlabel: __('Upload Dataset File (zip or pdf)'),\n\t\t\t\t\t\t\tsingularLabel: __('dataset'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<CardDivider />\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"ATP Dataset\"\n\t\t\t\t\t\thelp=\"ATP datasets are bound by an opt-in to the ATP Terms of Service.\"\n\t\t\t\t\t\tchecked={isAtp}\n\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\tsetMeta({\n\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\tis_atp: value,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</PluginPrePublishPanel>\n\t\t</Fragment>\n\t);\n}\n\nregisterPlugin(PLUGIN_NAME, {\n\trender: DatasetOptionsPanel,\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","window","SVG","xmlns","viewBox","children","Path","forwardRef","icon","size","props","ref","cloneElement","width","height","CalendarChart","values","months","getHeatLevel","value","percentage","Math","max","_jsx","className","map","index","StatsPanel","postId","datasetStats","stats","setStats","useState","useEffect","apiFetch","path","method","then","response","success","catch","error","console","useDatasetStats","currentYear","Date","getFullYear","years","useMemo","log","keys","selectedYear","setSelectedYear","data","dataForYear","i","monthKey","toString","padStart","sort","b","total","reduce","acc","curr","_jsxs","PanelBody","title","SelectControl","label","options","year","onChange","BaseControl","id","help","PLUGIN_NAME","ALLOWED_TYPES","registerPlugin","render","postType","useSelect","select","editorStore","getCurrentPostType","getCurrentPostId","meta","setMeta","useEntityProp","attachmentId","isAtp","datasetSchema","_download_attachment_id","is_atp","dataset_schema","Fragment","PluginSidebarMoreMenuItem","target","__","PluginSidebar","name","Icon","MediaDropZone","disabled","onUpdate","attachment","editButtonLabel","onClear","allowedTypes","singularLabel","CardDivider","ToggleControl","checked","PluginPrePublishPanel"],"sourceRoot":""}